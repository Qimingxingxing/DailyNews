{"ast":null,"code":"var _jsxFileName = \"/Users/qimingzhang/DailyNews/client/dailynews/src/SignUp/SignUpPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport SignUpForm from './SignUpForm';\nimport Auth from '../Auth/Auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUpPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [errors, setErrors] = useState({});\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const handleChange = event => {\n    setUser({\n      ...user,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (user.password !== user.confirmPassword) {\n      setErrors({\n        confirmPassword: \"Passwords don't match\"\n      });\n      return;\n    }\n    const request = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        jsonrpc: '2.0',\n        method: 'signup',\n        params: [user.email, user.password],\n        id: 1\n      })\n    };\n    fetch('/auth', request).then(response => response.json()).then(data => {\n      if (data.error) {\n        setErrors({\n          summary: data.error.message\n        });\n      } else {\n        Auth.authenticateUser(data.result.token, user.email);\n        navigate('/');\n      }\n    }).catch(error => {\n      setErrors({\n        summary: 'An error occurred during signup'\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(SignUpForm, {\n    onSubmit: handleSubmit,\n    onChange: handleChange,\n    errors: errors,\n    user: user\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUpPage, \"KItMQnxJhXEI8ArS4awwknE3GsA=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUpPage;\nexport default SignUpPage;\nvar _c;\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"names":["React","useState","useNavigate","SignUpForm","Auth","jsxDEV","_jsxDEV","SignUpPage","_s","navigate","errors","setErrors","user","setUser","email","password","confirmPassword","handleChange","event","target","name","value","handleSubmit","preventDefault","request","method","headers","body","JSON","stringify","jsonrpc","params","id","fetch","then","response","json","data","error","summary","message","authenticateUser","result","token","catch","onSubmit","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/qimingzhang/DailyNews/client/dailynews/src/SignUp/SignUpPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport SignUpForm from './SignUpForm';\nimport Auth from '../Auth/Auth';\n\nconst SignUpPage = () => {\n  const navigate = useNavigate();\n  const [errors, setErrors] = useState({});\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const handleChange = (event) => {\n    setUser({\n      ...user,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    \n    if (user.password !== user.confirmPassword) {\n      setErrors({\n        confirmPassword: \"Passwords don't match\"\n      });\n      return;\n    }\n\n    const request = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        jsonrpc: '2.0',\n        method: 'signup',\n        params: [user.email, user.password],\n        id: 1\n      })\n    };\n\n    fetch('/auth', request)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.error) {\n          setErrors({\n            summary: data.error.message\n          });\n        } else {\n          Auth.authenticateUser(data.result.token, user.email);\n          navigate('/');\n        }\n      })\n      .catch(error => {\n        setErrors({\n          summary: 'An error occurred during signup'\n        });\n      });\n  };\n\n  return (\n    <SignUpForm\n      onSubmit={handleSubmit}\n      onChange={handleChange}\n      errors={errors}\n      user={user}\n    />\n  );\n};\n\nexport default SignUpPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,IAAI,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC;IAC/Ba,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE;EACnB,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9BL,OAAO,CAAC;MACN,GAAGD,IAAI;MACP,CAACM,KAAK,CAACC,MAAM,CAACC,IAAI,GAAGF,KAAK,CAACC,MAAM,CAACE;IACpC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAIJ,KAAK,IAAK;IAC9BA,KAAK,CAACK,cAAc,CAAC,CAAC;IAEtB,IAAIX,IAAI,CAACG,QAAQ,KAAKH,IAAI,CAACI,eAAe,EAAE;MAC1CL,SAAS,CAAC;QACRK,eAAe,EAAE;MACnB,CAAC,CAAC;MACF;IACF;IAEA,MAAMQ,OAAO,GAAG;MACdC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,OAAO,EAAE,KAAK;QACdL,MAAM,EAAE,QAAQ;QAChBM,MAAM,EAAE,CAACnB,IAAI,CAACE,KAAK,EAAEF,IAAI,CAACG,QAAQ,CAAC;QACnCiB,EAAE,EAAE;MACN,CAAC;IACH,CAAC;IAEDC,KAAK,CAAC,OAAO,EAAET,OAAO,CAAC,CACpBU,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,CAACC,KAAK,EAAE;QACd3B,SAAS,CAAC;UACR4B,OAAO,EAAEF,IAAI,CAACC,KAAK,CAACE;QACtB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLpC,IAAI,CAACqC,gBAAgB,CAACJ,IAAI,CAACK,MAAM,CAACC,KAAK,EAAE/B,IAAI,CAACE,KAAK,CAAC;QACpDL,QAAQ,CAAC,GAAG,CAAC;MACf;IACF,CAAC,CAAC,CACDmC,KAAK,CAACN,KAAK,IAAI;MACd3B,SAAS,CAAC;QACR4B,OAAO,EAAE;MACX,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACEjC,OAAA,CAACH,UAAU;IACT0C,QAAQ,EAAEvB,YAAa;IACvBwB,QAAQ,EAAE7B,YAAa;IACvBP,MAAM,EAAEA,MAAO;IACfE,IAAI,EAAEA;EAAK;IAAAmC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEN,CAAC;AAAC1C,EAAA,CAlEID,UAAU;EAAA,QACGL,WAAW;AAAA;AAAAiD,EAAA,GADxB5C,UAAU;AAoEhB,eAAeA,UAAU;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
